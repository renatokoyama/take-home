{"version":3,"sources":["lib/theme/theme.ts","lib/theme/styledSystem.ts","lib/theme/globalTypography.ts","lib/theme/globalReset.ts","lib/theme/GlobalThemeProvider.tsx","components/Box/index.tsx","components/DarkOverlay/index.tsx","components/Flex/index.tsx","components/Heading/index.tsx","state/ducks/taskboard/types.ts","state/ducks/taskboard/actions.ts","components/FAIcon/index.tsx","components/Button/index.tsx","components/Text/index.tsx","components/Card/index.tsx","components/Input/index.tsx","interfaces/task.ts","components/TaskPriorityMarker/index.tsx","components/TaskCard/index.tsx","components/DraggableTaskCard/index.tsx","components/TaskLane/index.tsx","pages/PageContainer.tsx","pages/TaskBoard/index.tsx","state/ducks/taskboard/defaultState.ts","state/ducks/taskboard/reducers.ts","state/ducks/index.ts","state/index.ts","App.tsx","state/configureStore.dev.ts","index.tsx"],"names":["theme","colors","white","primary","secondary","greyscale","success","warning","danger","fonts","color","compose","ssColor","system","textColor","property","scale","COMMON","space","layout","display","ALL","position","typography","flexbox","shadow","border","background","globalTypography","css","globalReset","GlobalThemeProvider","children","GlobalStyle","createGlobalStyle","Box","styled","div","DarkOverlay","Flex","center","Heading","h1","TaskBoardActionTypes","isEditingTask","isEditing","action","calcSize","val","FAIcon","FontAwesomeIcon","width","height","StyledButton","button","showBorder","Button","icon","iconSize","props","size","Text","p","CardContainer","Card","forwardRef","ref","borderRadius","padding","bg","TaskPriority","StyledInput","input","Input","onTextChange","defaultValue","alignItems","onChange","e","target","value","Map","id","title","priority","HIGH","Marker","MEDIUM","handleColorType","TaskPriorityMarker","CustomCard","EditButton","Actions","ActionButton","TaskCard","task","showPriority","onSave","onCancel","dispatch","useDispatch","dispatchEdit","editedTask","edit","editTask","useState","editMode","setEditMode","setTitle","useEffect","closeActions","zIndex","marginBottom","as","marginTop","newTitle","paddingRight","dangerouslySetInnerHTML","__html","replace","className","onClick","marginLeft","DraggableTaskCard","index","draggableId","provided","innerRef","draggableProps","dragHandleProps","EditTitleButton","EditTitleContainer","TaskList","TaskLane","stage","tasks","onNewTaskAdded","addingNewTask","setAddingNewTask","backgroundColor","flexDirection","flex","right","top","justifyContent","editedStage","fontWeight","droppableId","droppableProps","map","placeholder","length","paddingY","textAlign","PageContainer","TaskBoard","state","useSelector","taskboard","stages","stageId","stageID","add","addTask","onEditStage","editStage","onDragEnd","result","move","destination","stageSourceId","source","stageDestId","sourceIndex","destIndex","taskId","stageTasks","taskIds","find","marginRight","defaultState","LOW","initialState","defineState","rootReducer","combineReducers","type","uuidv4","newTask","payload","findIndex","s","push","t","sourceStageIndex","destStageIndex","splice","configureStore","store","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","storeSynchronize","initialReduxState","App","library","fas","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAoBaA,G,MAAe,CAC1BC,OAAQ,CAENC,MAAO,OACPC,QAAS,CACP,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,UAAW,CACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,UAAW,CACT,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,QAAS,CAAC,UAAW,IACrBC,QAAS,UACTC,OAAQ,WAEVC,MAAO,CACLN,QAAQ,mG,OC9BCO,EAAQC,YACnBC,IACAC,YAAO,CACLC,UAAW,CACTC,SAAU,QACVC,MAAO,aAeAC,EAASN,YAAQO,IAAOR,EAAOS,IAAQC,KAEvCC,EAAMV,YACjBM,EACAK,IACAC,IACAC,IACAC,IACAC,IACAC,K,moBC9DK,IAAMC,EAAmBC,YAAH,KACzB,gBAAG7B,EAAH,EAAGA,MAAH,OAAe6B,YAAd,IAEgB7B,EAAMS,MAAMN,QAElBH,EAAMC,OAAOI,UAAU,O,kpDCL/B,IAAMyB,EAAcD,YAAH,K,qNCOjB,IAAME,EAAsB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAC9BC,EAAcC,YAAH,IAEbJ,EACAF,GAEJ,OACE,eAAC,IAAD,CAAe5B,MAAOA,EAAtB,UACE,cAACiC,EAAD,IACCD,M,sFCbP,IAIeG,EAJHC,IAAOC,IAAV,IACLhB,G,gNCHJ,IAUeiB,EAVKF,YAAOD,EAAPC,CAAH,K,qQCKjB,IAYeG,EAZFH,IAAOC,IAAV,KAGN,qBAAGG,QAEHX,YADM,OAKNR,G,qFCbJ,IAKeoB,EALCL,IAAOM,GAAV,IACTzB,EACAM,K,8BCESoB,EACD,sBADCA,EAEA,uBAFAA,EAGA,uBAHAA,EAIC,wBAJDA,EAKC,wBCIDC,EAAgB,SAACC,GAAD,OAC3BC,iBAAOH,EAAiC,CAAEE,e,oPCD5C,IAAME,EAAW,SAACC,GAAD,MACA,kBAARA,EAAP,UAA6BA,EAA7B,MAAuCA,GAa1BC,EAXAb,YAAOc,IAAPd,CAAH,IACRnB,GACA,gBAAGkC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAV,OAAuBvB,YAAtB,IAGUkB,EAASI,GACRJ,EAASK,GAAUD,O,0JCLnC,IAAME,EAAejB,IAAOkB,OAAV,KACN,gBAAGC,EAAH,EAAGA,WAAYvD,EAAf,EAAeA,MAAf,OACRuD,EAAU,oBAAgBvD,EAAMC,OAAOI,UAAU,IAAO,SAGxDY,EACAM,KAiBWiC,EAdA,SAAC,GAAyD,IAAvDxB,EAAsD,EAAtDA,SAAUyB,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,SAAaC,EAAyB,8CACtE,OACE,eAACN,EAAD,2BAAkBM,GAAlB,cACGF,GACC,qCACE,cAAC,EAAD,CAAQA,KAAMA,EAAMG,KAAMF,IAC1B,wCAGH1B,O,2MCrBP,IAUe6B,GAVFzB,IAAO0B,EAAV,MACN,gBAAG9D,EAAH,EAAGA,MAAH,OAAe6B,YAAd,IACQ7B,EAAMC,OAAOI,UAAU,MAEhCa,IACAK,IACAX,EACAU,K,2HClBJ,IAAMyC,GAAgB3B,YAAOD,EAAPC,CAAH,MA6BJ4B,GAzBFC,sBACX,WAQEC,GACI,IAPFlC,EAOC,EAPDA,SAOC,IANDmC,oBAMC,MANc,MAMd,MALDC,eAKC,MALS,WAKT,MAJDC,UAIC,MAJI,QAIJ,EAHEV,EAGF,0DACH,OACE,cAACI,GAAD,yBACEM,GAAIA,EACJD,QAASA,EACTD,aAAcA,EACdD,IAAKA,GACDP,GALN,aAOG3B,Q,ocCNT,ICxBYsC,GDwBNC,GAAcnC,IAAOoC,MAAV,MACb,gBAAGxE,EAAH,EAAGA,MAAH,OAAe6B,YAAd,KACQ7B,EAAMC,OAAOI,UAAU,GAMZL,EAAMC,OAAOC,MAGlBF,EAAMS,MAAMN,QAGzBe,IACAK,IACAX,MAoBS6D,GAhBDR,sBACZ,WAA2CC,GAAS,IAAjDQ,EAAgD,EAAhDA,aAAcC,EAAkC,EAAlCA,aAAiBhB,EAAiB,+CACjD,OACE,cAAC,EAAD,CAAMiB,WAAW,SAAStD,SAAS,WAAnC,SACE,cAACiD,GAAD,2BACMZ,GADN,IAEEO,IAAKA,EACLS,aAAcA,EACdE,SAAU,SAACC,GACT,OAAOJ,GAAgBA,EAAaI,EAAEC,OAAOC,iB,SCrD7CV,O,eAAAA,I,mBAAAA,I,cAAAA,Q,KAwBH,IAAIW,IAAI,CACb,CACE,IACA,CACEC,GAAI,IACJC,MAAO,SACPC,SAAUd,GAAae,OAG3B,CACE,IACA,CACEH,GAAI,IACJC,MAAO,SACPC,SAAUd,GAAae,OAG3B,CACE,IACA,CACEH,GAAI,IACJC,MAAO,SACPC,SAAUd,GAAae,S,gPClC/B,IAWMC,GAASlD,YAAOD,EAAPC,CAAH,MACR,gBAAGgD,EAAH,EAAGA,SAAH,OAAkBvD,YAAjB,KAZmB,SAACuD,GACvB,OAAQA,GACN,KAAKd,GAAae,KAChB,OAAOrF,EAAMC,OAAOO,OACtB,KAAK8D,GAAaiB,OAChB,OAAOvF,EAAMC,OAAOM,QACtB,QACE,OAAOP,EAAMC,OAAOK,QAAQ,IAMVkF,CAAgBJ,OAezBK,GAPY,SAAC,GAGI,IAF9BL,EAE6B,EAF7BA,SACGzB,EAC0B,4BAC7B,OAAO,cAAC2B,GAAD,aAAQF,SAAUA,GAAczB,K,2lBCxBzC,IAAM+B,GAAatD,YAAO4B,GAAP5B,CAAH,MAmBVuD,GAAavD,YAAOoB,EAAPpB,CAAH,MAMVwD,GAAUxD,YAAOD,EAAPC,CAAH,MAMPyD,GAAezD,YAAOoB,EAAPpB,CAAH,KACIpC,EAAMC,OAAOK,QAAQ,GAChCN,EAAMC,OAAOC,OAwFT4F,GAjFE7B,sBACf,WAA6DC,GAAS,IAAnE6B,EAAkE,EAAlEA,KAAkE,IAA5DC,oBAA4D,SAAtCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,SAAavC,EAAiB,2DAC7DwC,EAAWC,cAEXC,EAAe,SAACC,GACpBH,ERlDkB,SAACJ,GAAD,OACtBjD,iBAAOH,EAAgC,CAAE4D,KAAM,CAAER,UQiDpCS,CAASF,KAJ+C,EAMnCG,oBAAUV,GANyB,mBAM5DW,EAN4D,KAMlDC,EANkD,OAOzCF,mBAAQ,OAACV,QAAD,IAACA,OAAD,EAACA,EAAMZ,OAP0B,mBAO5DA,EAP4D,KAOrDyB,EAPqD,KASnEC,qBAAU,WACRV,EAASvD,EAAc8D,MACtB,CAACA,IAEJ,IAAMI,EAAe,WACnBH,GAAY,IAEd,OACE,eAACjB,GAAD,2BAAgB/B,GAAhB,IAAuBoD,OAAQL,EAAW,GAAK,EAAGxC,IAAKA,EAAvD,UACG8B,GACC,cAAC,GAAD,CAAoBZ,SAAQ,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAMX,SAAU4B,aAAa,QAE5DN,EACC,cAAC,GAAD,CACEO,GAAG,WACHtC,aAAY,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAMZ,MACpB/B,OAAO,QACPgB,QAAQ,OACR8C,UAAU,MACVxC,aAAc,SAACyC,GACbP,EAASO,MAIb,eAAC,EAAD,CAAK7F,SAAS,WAAd,UACE,cAAC,GAAD,CACE8F,aAAa,OACb9F,SAAS,WACT+F,wBAAyB,CACvBC,QAAY,OAAJvB,QAAI,IAAJA,OAAA,EAAAA,EAAMZ,MAAMoC,QAAQ,cAAe,YAAa,MAG5D,cAAC5B,GAAD,CACE6B,UAAU,OACV9G,MAAOV,EAAMC,OAAOI,UAAU,GAC9BoD,KAAK,MACLgE,QAAS,WACPd,GAAY,SAKnBD,GACC,eAACd,GAAD,WACE,cAACC,GAAD,CACE4B,QAAS,WACPX,IACA,IAAMR,EAAU,2BAASP,GAAT,IAAwBZ,MAAOA,GAAS,KAExD,OADAkB,EAAaC,GACNL,GAAUA,EAAOK,IAL5B,kBAWA,cAACT,GAAD,CACE6B,WAAW,OACXD,QAAS,WAEP,OADAX,IACOZ,GAAYA,KAJvB,8BClFGyB,GAtBW,SAAC,GAKI,IAJ7BC,EAI4B,EAJ5BA,MACA7B,EAG4B,EAH5BA,KACAC,EAE4B,EAF5BA,aACGrC,EACyB,+CAC5B,OACE,cAAC,IAAD,CAAWkE,YAAa9B,EAAKb,GAAI0C,MAAOA,EAAxC,SACG,SAACE,GAAD,OACC,cAAC,GAAD,qCACE5D,IAAK4D,EAASC,SACdhC,KAAMA,EACNC,aAAcA,GACVrC,GACAmE,EAASE,gBACTF,EAASG,sB,iYCdvB,IAAMC,GAAkB9F,YAAOoB,EAAPpB,CAAH,MAKf+F,GAAqB/F,YAAOD,EAAPC,CAAH,MAoBlBgG,GAAWhG,IAAOC,IAAV,MAGC,SAASgG,GAAT,GAOI,IANjBC,EAMgB,EANhBA,MACAC,EAKgB,EALhBA,MACAvC,EAIgB,EAJhBA,aACAwC,EAGgB,EAHhBA,eACAvC,EAEgB,EAFhBA,OACGtC,EACa,4EAC0B8C,oBAAS,GADnC,mBACTgC,EADS,KACMC,EADN,OAEgBjC,oBAAS,GAFzB,mBAETC,EAFS,KAECC,EAFD,OAGUF,mBAAS6B,EAAMnD,OAHzB,mBAGTA,EAHS,KAGFyB,EAHE,KAKVT,EAAWC,cACjBS,qBAAU,WACRV,EAASvD,EAAc6F,MACtB,CAACA,IAKJ,OACE,eAAC,EAAD,yBACEE,gBAAiB3I,EAAMC,OAAOI,UAAU,GACxC+D,QAAQ,OACRwE,cAAc,SACdzE,aAAa,MACb0E,KAAM,EACNzF,OAAO,eACHO,GAPN,cASG+C,EACC,eAAC,EAAD,CAAKpF,SAAS,WAAd,UACE,cAAC,GAAD,CACEqD,aAAc2D,EAAMnD,MACpB/B,OAAO,OACPgB,QAAQ,SACRM,aAAc,SAACyC,GACbP,EAASO,MAGb,eAAC,EAAD,CACE7F,SAAS,WACTwH,MAAM,IACNC,IAAI,IACJ3F,OAAO,OACPwB,WAAW,SACXoE,eAAe,SANjB,UAQE,cAAC,EAAD,CACEvF,KAAK,QACL/C,MAAOV,EAAMC,OAAOO,OACpBkD,SAAS,KACT+D,QAAS,WACPd,GAAY,MAGhB,cAAC,EAAD,CACElD,KAAK,eACL/C,MAAOV,EAAMC,OAAOK,QAAQ,GAC5BoD,SAAS,KACT+D,QAAS,WACPd,GAAY,GACZ,IAAMsC,EAAW,2BAAQX,GAAR,IAAenD,MAAOA,GAAS,KAChD,OAAOc,GAAUA,EAAOgD,YAMhC,eAACd,GAAD,WACE,cAAC,EAAD,CAASlB,GAAG,KAAKiC,WAAY,IAA7B,SACGZ,EAAMnD,QAET,cAAC+C,GAAD,CACEV,UAAU,OACV9G,MAAOV,EAAMC,OAAOI,UAAU,GAC9BoD,KAAK,MACLgE,QAAS,WACPd,GAAY,SAKpB,cAAC,IAAD,CAAWwC,YAAab,EAAMpD,GAA9B,SACG,SAAC4C,GACA,OACE,eAACM,GAAD,yBAAUlE,IAAK4D,EAASC,UAAcD,EAASsB,gBAA/C,qBACGb,QADH,IACGA,OADH,EACGA,EAAOc,KAAI,SAACtD,EAAM6B,GAAP,OACV,cAAC,GAAD,CAEE7B,KAAMA,EACNC,aAAcA,EACd4B,MAAOA,EACPV,UAAU,QALZ,eACenB,EAAKb,QAOrB4C,EAASwB,cACPf,IAAUA,EAAMgB,SACjB,cAAC,EAAD,CAAStC,GAAG,KAAKuC,SAAS,OAA1B,6BAQV,cAAC,EAAD,CACEpF,QAAQ,IACR8C,UAAU,OACVQ,WAAW,MACX+B,UAAU,OACVhG,KAAK,OACL/C,MAAM,OACN+G,QAhGe,WACnBiB,GAAiB,IAwFf,8BAWCD,GACC,cAAC,GAAD,CACEvB,UAAU,QACVjB,OAAQ,SAACF,GAEP,OADA2C,GAAiB,GACVF,GAAkBA,EAAeF,EAAMpD,GAAIa,IAEpDG,SAAU,WACRwC,GAAiB,U,8HCrK7B,IAMegB,GANOtH,YAAOD,EAAPC,CAAH,MCwEJuH,GA9DG,WAChB,IAAMxD,EAAWC,cAEXwD,EAAQC,aAAY,gBAAGC,EAAH,EAAGA,UAAH,MAAsC,CAC9DC,OAAQD,EAAUC,OAClBxB,MAAOuB,EAAUvB,MACjB1F,UAAWiH,EAAUjH,cAkBjB2F,EAAiB,SAACwB,EAAiBjE,GACvCI,EZjCmB,SAAC8D,EAAiBlE,GAAlB,OACrBjD,iBAAOH,EAA+B,CAAEuH,IAAK,CAAEnE,OAAMkE,aYgC1CE,CAAQH,EAASjE,KAGtBqE,EAAc,SAAC9B,GACnBnC,EZ5BqB,SAACmC,GAAD,OACvBxF,iBAAOH,EAAiC,CAAE4D,KAAM,CAAE+B,WY2BvC+B,CAAU/B,KAGrB,OACE,eAAC,GAAD,CAAeK,gBAAiB3I,EAAMC,OAAOI,UAAU,GAAvD,UACGuJ,EAAM/G,WAAa,cAAC,EAAD,IACpB,cAAC,EAAD,CAASoE,GAAG,KAAKvG,MAAOV,EAAMC,OAAOC,MAArC,mCAGA,cAAC,IAAD,CAAiBoK,UA7BH,SAACC,GZXG,IAACC,EYYhBD,EAAOE,aAGZtE,GZfqBqE,EYgBV,CACPE,cAAeH,EAAOI,OAAOxB,YAC7ByB,YAAaL,EAAOE,YAAYtB,YAChC0B,YAAaN,EAAOI,OAAO/C,MAC3BkD,UAAWP,EAAOE,YAAY7C,MAC9BmD,OAAQR,EAAO1C,aZpBrB/E,iBAAOH,EAAgC,CAAE6H,YYuCrC,SACE,cAAC,EAAD,CAAMtD,UAAU,OAAhB,SACG0C,EAAMG,OAAOV,KAAI,SAACf,EAAOV,GACxB,IAAMoD,EAAa1C,EAAM2C,QAAQ5B,KAC/B,SAACnE,GAAD,OAAQ0E,EAAMrB,MAAM2C,MAAK,SAACnF,GAAD,OAAUA,EAAKb,KAAOA,QAEjD,OACE,cAACmD,GAAD,CAEEC,MAAOA,EACPC,MAAOyC,EACPG,YAAY,OACZnF,aAAwB,IAAV4B,EACdY,eAAgBA,EAChBvC,OAAQmE,GANH9B,EAAMpD,e,+CCxDdkG,GAA+B,CAC1CvI,WAAW,EACX0F,MAAO,CACL,CACErD,GAAI,IACJC,MAAO,yDACPC,SAAUd,GAAa+G,KAEzB,CACEnG,GAAI,IACJC,MAAO,iEACPC,SAAUd,GAAaiB,QAEzB,CACEL,GAAI,IACJC,MAAO,iCACPC,SAAUd,GAAae,MAEzB,CACEH,GAAI,IACJC,MAAO,oDACPC,SAAUd,GAAae,MAEzB,CACEH,GAAI,IACJC,MAAO,qDACPC,SAAUd,GAAae,MAEzB,CACEH,GAAI,IACJC,MAAO,gCACPC,SAAUd,GAAae,OAG3B0E,OAAQ,CACN,CACE7E,GAAI,SACJC,MAAO,WACP8F,QAAS,CAAC,IAAK,IAAK,MAEtB,CACE/F,GAAI,SACJC,MAAO,WACP8F,QAAS,CAAC,IAAK,MAEjB,CACE/F,GAAI,SACJC,MAAO,WACP8F,QAAS,CAAC,QC5CVK,GAAeC,uBAAYH,GAAZG,CAA0B,aAC/CD,GAAazI,WAAY,EA0BlB,IC3BM2I,GAAcC,aAAkC,CAC3D3B,UD0B8B,WAGV,IAFpBF,EAEmB,uDAFK0B,GACxBxI,EACmB,uCACnB,OAAQA,EAAO4I,MACb,KAAK/I,EACH,IAAMuC,EAAKyG,gBACLC,EAAO,2BAAQ9I,EAAO+I,QAAQ3B,IAAInE,MAA3B,IAAiCb,OACtC6E,EAAWH,EAAXG,OACFnC,EAAQmC,EAAO+B,WAAU,SAACC,GAAD,OAAOA,EAAE7G,KAAOpC,EAAO+I,QAAQ3B,IAAID,WAIlE,OAHIrC,GAAS,GACXmC,EAAOnC,GAAOqD,QAAQe,KAAK9G,GAEtB,2BACF0E,GADL,IAEErB,MAAM,GAAD,oBAAMqB,EAAMrB,OAAZ,CAAmBqD,IACxB7B,WAGJ,KAAKpH,EACH,OAAO,2BACFiH,GADL,IAEE/G,UAAWC,EAAO+I,QAAQhJ,YAG9B,KAAKF,EAAiC,IAC5B4F,EAAUqB,EAAVrB,MACFX,EAAQW,EAAMuD,WAAU,SAACG,GAAD,OAAOA,EAAE/G,KAAOpC,EAAO+I,QAAQtF,KAAKR,KAAKb,MAIvE,OAHI0C,GAAS,IACXW,EAAMX,GAAS9E,EAAO+I,QAAQtF,KAAKR,MAE9B,2BACF6D,GADL,IAEErB,UAGJ,KAAK5F,EAAiC,IAC5BoH,EAAWH,EAAXG,OACAS,EAAS1H,EAAO+I,QAAhBrB,KACR,GACEA,EAAKE,gBAAkBF,EAAKI,aAC5BJ,EAAKK,cAAgBL,EAAKM,UAE1B,OAAOlB,EAGT,IAAMsC,EAAmBnC,EAAO+B,WAC9B,SAACC,GAAD,OAAOA,EAAE7G,KAAOsF,EAAKE,iBAEjByB,EACJ3B,EAAKI,cAAgBJ,EAAKE,cACtBwB,EACAnC,EAAO+B,WAAU,SAACC,GAAD,OAAOA,EAAE7G,KAAOsF,EAAKI,eAS5C,OAPAb,EAAOmC,GAAkBjB,QAAQmB,OAAO5B,EAAKK,YAAa,GAC1Dd,EAAOoC,GAAgBlB,QAAQmB,OAC7B5B,EAAKM,UACL,EACAhI,EAAO+I,QAAQrB,KAAKO,QAGf,2BACFnB,GADL,IAEEG,WAGJ,KAAKpH,EAAkC,IAC7BoH,EAAWH,EAAXG,OACFnC,EAAQmC,EAAO+B,WACnB,SAACG,GAAD,OAAOA,EAAE/G,KAAOpC,EAAO+I,QAAQtF,KAAK+B,MAAMpD,MAK5C,OAHI0C,GAAS,IACXmC,EAAOnC,GAAS9E,EAAO+I,QAAQtF,KAAK+B,OAE/B,2BACFsB,GADL,IAEEG,WAGJ,QACE,OAAOH,MEhHEyC,ICMTC,GCES,SACbhB,GAEA,IAAMiB,EACJC,OAAOC,sCAAwC9L,KAG3C2L,EAAQI,aAAYlB,GAAaF,EAAciB,KAIrD,OAHAI,KAAiBL,EAAO,IAGjBA,EDbKD,CADQG,OAAeI,mBAatBC,OAVf,WACE,OACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,EAAD,UACE,cAAC,GAAD,S,MENRQ,IAAQ5C,IAAI6C,KAEZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ac3b1981.chunk.js","sourcesContent":["declare module 'styled-components' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-interface\n  export interface DefaultTheme extends Theme {}\n}\n\nexport interface Theme {\n  colors: {\n    white: string\n    primary: string[]\n    secondary: string[]\n    greyscale: string[]\n    success: string[]\n    warning: string\n    danger: string\n  }\n  fonts: {\n    primary: string\n  }\n}\n\nexport const theme: Theme = {\n  colors: {\n    // Brand\n    white: '#fff',\n    primary: [\n      '#0A43D2',\n      '#04122B',\n      '#051F4D',\n      '#12358E',\n      '#8C9DC9',\n      '#C0D0F9',\n      '#DAE2F9',\n      '#DEE7FF',\n      '#EFF3FF',\n      '#FBFCFF',\n    ],\n    secondary: [\n      '#FF813E',\n      '#310F04',\n      '#601D09',\n      '#DA6E4D',\n      '#FFA58A',\n      '#FEC3B1',\n      '#FFD1C3',\n      '#FFE4DC',\n      '#FFF2EE',\n      '#FFF2EE',\n    ],\n    greyscale: [\n      '#000000',\n      '#1C1C1C',\n      '#242424',\n      '#5E5E5E',\n      '#717171',\n      '#8D8D8D',\n      '#C4C4C4',\n      '#EBECF0',\n      '#E2E2E2',\n      '#FFFFFF',\n    ],\n    success: ['#60BE4B', ''],\n    warning: '#F0D406',\n    danger: '#EB5B42',\n  },\n  fonts: {\n    primary: `'Inter', apple-system, BlinkMacSystemFont, 'Helvetica Neue',\n    helvetica, rial, sans-serif`,\n  },\n}\n","/**\n *  Central place to define constants / types for styled-system props\n */\nimport {\n  space,\n  SpaceProps,\n  layout,\n  LayoutProps,\n  position,\n  PositionProps,\n  typography,\n  TypographyProps,\n  flexbox,\n  FlexboxProps,\n  shadow,\n  ShadowProps,\n  border,\n  BorderProps,\n  display,\n  DisplayProps,\n  background,\n  BackgroundProps,\n  grid,\n  GridProps,\n  color as ssColor,\n  ColorProps as SSColorProps,\n  TextColorProps,\n  compose,\n  system,\n} from 'styled-system'\n\nexport interface ColorProps extends Omit<SSColorProps, 'color'> {\n  textColor?: TextColorProps['color']\n}\n\nexport const color = compose(\n  ssColor,\n  system({\n    textColor: {\n      property: 'color',\n      scale: 'colors',\n    },\n  })\n)\n\nexport type CommonProps = SpaceProps & LayoutProps & ColorProps & DisplayProps\n\nexport type AllProps = CommonProps &\n  PositionProps &\n  TypographyProps &\n  FlexboxProps &\n  ShadowProps &\n  BorderProps &\n  BackgroundProps\n\nexport const COMMON = compose(space, color, layout, display)\n\nexport const ALL = compose(\n  COMMON,\n  position,\n  typography,\n  flexbox,\n  shadow,\n  border,\n  background\n)\n\nexport type InnerStyledComponent<T, H> = T &\n  React.HTMLAttributes<H> & {\n    as?: keyof JSX.IntrinsicElements\n  }\n\nexport type InnerStyledSVG<T, H> = T & React.SVGAttributes<H>\n\nexport {\n  space,\n  layout,\n  position,\n  typography,\n  flexbox,\n  shadow,\n  border,\n  display,\n  background,\n  grid,\n}\n\nexport type {\n  SpaceProps,\n  LayoutProps,\n  PositionProps,\n  TypographyProps,\n  FlexboxProps,\n  ShadowProps,\n  BorderProps,\n  DisplayProps,\n  BackgroundProps,\n  GridProps,\n}\n","import { css } from 'styled-components'\n\nexport const globalTypography = css`\n  ${({ theme }) => css`\n    body {\n      font-family: ${theme.fonts.primary};\n      font-weight: 300;\n      color: ${theme.colors.greyscale[0]};\n      font-size: 16px;\n      line-height: 22px;\n    }\n\n    h1 {\n      font-size: 50px;\n      font-weight: 600;\n    }\n\n    h2 {\n      font-size: 24px;\n      font-weight: 600;\n    }\n\n    h3 {\n      font-size: 20px;\n      font-weight: 300;\n    }\n\n    h4 {\n      font-size: 18px;\n      font-weight: 300;\n    }\n\n    h5 {\n      font-size: 16px;\n      font-weight: 300;\n    }\n  `}\n`\n","import { css } from 'styled-components'\n\nexport const globalReset = css`\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  b,\n  u,\n  i,\n  center,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  main,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    vertical-align: baseline;\n    box-sizing: border-box;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  main,\n  menu,\n  nav,\n  section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n    display: none;\n  }\n  body {\n    line-height: 1;\n    height: 100%;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  button {\n    outline: none;\n    cursor: pointer;\n  }\n  #__next {\n    height: 100%;\n  }\n`\n","import { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport { theme } from './theme'\nimport { globalReset } from './globalReset'\nimport { globalTypography } from './globalTypography'\n\ninterface GlobalThemeProviderProps {\n  children: React.ReactChild\n}\n\nexport const GlobalThemeProvider = ({ children }: GlobalThemeProviderProps) => {\n  const GlobalStyle = createGlobalStyle`\n    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');\n    ${globalReset}\n    ${globalTypography}\n  `\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      {children}\n    </ThemeProvider>\n  )\n}\n","import styled from 'styled-components'\nimport { ALL, AllProps } from 'src/lib/theme'\n\nexport type BoxProps = AllProps\n\nconst Box = styled.div<BoxProps>`\n  ${ALL}\n`\n\nexport default Box\n","import styled from 'styled-components'\nimport Box from '../Box'\n\nconst DarkOverlay = styled(Box)`\n  position: absolute;\n  z-index: 1;\n  background-color: rgba(0, 0, 0, 0.6);\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n`\n\nexport default DarkOverlay\n","import styled, { css } from 'styled-components'\nimport { ALL, AllProps, InnerStyledComponent } from 'src/lib/theme'\n\nexport interface FlexProps\n  extends InnerStyledComponent<AllProps, HTMLDivElement> {\n  center?: boolean\n}\n\nconst Flex = styled.div<FlexProps>`\n  display: flex;\n  position: relative;\n  ${({ center }) =>\n    center &&\n    css`\n      justify-content: center;\n      align-items: center;\n    `}\n  ${ALL}\n`\n\nexport default Flex\n","import styled from 'styled-components'\nimport { COMMON, CommonProps, typography, TypographyProps } from 'src/lib/theme'\n\nexport type HeadingProps = CommonProps & TypographyProps\nconst Heading = styled.h1<HeadingProps>`\n  ${COMMON}\n  ${typography}\n`\n\nexport default Heading\n","import { Task, TaskStage } from 'src/interfaces/task'\n\nexport interface TaskBoardState {\n  tasks: Task[]\n  stages: TaskStage[]\n  isEditing: boolean\n}\n\nexport const TaskBoardActionTypes = {\n  ADD_TASK: '@taskboard/ADD_TASK',\n  EDIT_TASK: '@taskboard/EDIT_TASK',\n  MOVE_TASK: '@taskboard/MOVE_TASK',\n  EDIT_STAGE: '@taskboard/EDIT_STAGE',\n  IS_EDITING: '@taskboard/IS_EDITING',\n}\n","import { Task, TaskStage } from 'src/interfaces/task'\nimport { action } from 'typesafe-actions'\nimport { MovePayload } from './reducers'\nimport { TaskBoardActionTypes } from './types'\n\nexport const addTask = (stageID: string, task: Task) =>\n  action(TaskBoardActionTypes.ADD_TASK, { add: { task, stageID } })\n\nexport const editTask = (task: Task) =>\n  action(TaskBoardActionTypes.EDIT_TASK, { edit: { task } })\n\nexport const moveTask = (move: MovePayload) =>\n  action(TaskBoardActionTypes.MOVE_TASK, { move })\n\nexport const editStage = (stage: TaskStage) =>\n  action(TaskBoardActionTypes.EDIT_STAGE, { edit: { stage } })\n\nexport const isEditingTask = (isEditing: boolean) =>\n  action(TaskBoardActionTypes.IS_EDITING, { isEditing })\n","import styled, { css } from 'styled-components'\nimport {\n  FontAwesomeIcon,\n  FontAwesomeIconProps,\n} from '@fortawesome/react-fontawesome'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport { COMMON, CommonProps } from 'src/lib/theme'\n\ninterface Props extends CommonProps {\n  icon: IconProp\n  size?: string | number\n}\n\nexport type FAIconProps = Props &\n  // Omit FA icon type and prefer IconProp\n  Omit<FontAwesomeIconProps, 'icon'>\n\nconst calcSize = (val?: string | number) =>\n  typeof val === 'number' ? `${val}px` : val\n\nconst FAIcon = styled(FontAwesomeIcon)<FAIconProps>`\n  ${COMMON}\n  ${({ width, height }) => css`\n    &,\n    &.svg-inline--fa {\n      width: ${calcSize(width)};\n      height: ${calcSize(height || width)};\n    }\n  `}\n`\n\nexport default FAIcon\n","import FAIcon, { FAIconProps } from 'src/components/FAIcon'\nimport {\n  COMMON,\n  typography,\n  CommonProps,\n  InnerStyledComponent,\n  TypographyProps,\n} from 'src/lib/theme'\nimport styled from 'styled-components'\n\ninterface Props {\n  icon?: FAIconProps['icon']\n  iconSize?: FAIconProps['size']\n  showBorder?: boolean\n}\n\nexport type ButtonProps = InnerStyledComponent<\n  CommonProps & Props & TypographyProps,\n  HTMLButtonElement | HTMLAnchorElement\n>\n\nconst StyledButton = styled.button<ButtonProps>`\n  border: ${({ showBorder, theme }) =>\n    showBorder ? `1px solid ${theme.colors.greyscale[2]}` : 'none'};\n  background-color: transparent;\n  padding: 8px;\n  ${COMMON};\n  ${typography};\n`\n\nconst Button = ({ children, icon, iconSize, ...props }: ButtonProps) => {\n  return (\n    <StyledButton {...props}>\n      {icon && (\n        <>\n          <FAIcon icon={icon} size={iconSize} />\n          <span> </span>\n        </>\n      )}\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default Button\n","import styled, { css } from 'styled-components'\n\nimport {\n  space,\n  SpaceProps,\n  typography,\n  TypographyProps,\n  color as ssColor,\n  ColorProps,\n  position,\n  PositionProps,\n} from 'src/lib/theme'\n\nexport type TextProps = SpaceProps &\n  TypographyProps &\n  ColorProps &\n  PositionProps\n\nconst Text = styled.p<TextProps>`\n  ${({ theme }) => css`\n    color: ${theme.colors.greyscale[0]};\n  `};\n  ${space};\n  ${typography};\n  ${ssColor};\n  ${position};\n`\n\nexport default Text\n","import { forwardRef } from 'react'\nimport Box, { BoxProps } from 'src/components/Box'\nimport { InnerStyledComponent } from 'src/lib/theme'\nimport styled from 'styled-components'\n\nexport type CardProps = InnerStyledComponent<BoxProps, HTMLDivElement>\n\nconst CardContainer = styled(Box)`\n  box-shadow: 0px 10px 24px rgba(0, 0, 0, 0.06);\n`\n\nconst Card = forwardRef<HTMLDivElement, CardProps>(\n  (\n    {\n      children,\n      borderRadius = '7px',\n      padding = '8px 10px',\n      bg = 'white',\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <CardContainer\n        bg={bg}\n        padding={padding}\n        borderRadius={borderRadius}\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </CardContainer>\n    )\n  }\n)\n\nexport default Card\n","import { ChangeEvent, forwardRef } from 'react'\nimport Flex from 'src/components/Flex'\nimport {\n  color as ssColor,\n  ColorProps,\n  InnerStyledComponent,\n  LayoutProps,\n  space,\n  SpaceProps,\n  typography,\n  TypographyProps,\n} from 'src/lib/theme'\nimport styled, { css } from 'styled-components'\n\ninterface Props {\n  defaultValue?: string\n  onTextChange?: (value: string) => void\n}\n\nexport type InputProps = InnerStyledComponent<\n  SpaceProps & TypographyProps & ColorProps & LayoutProps & Props,\n  HTMLInputElement\n>\n\nconst StyledInput = styled.input<InputProps>`\n  ${({ theme }) => css`\n    color: ${theme.colors.greyscale[0]};\n    height: 60px;\n    width: 100%;\n    border: none;\n    margin-bottom: 0;\n    padding: 0px 48px 0 20px;\n    background-color: ${theme.colors.white};\n    font-size: 16px;\n    line-height: 1.2;\n    font-family: ${theme.fonts.primary};\n    font-weight: 300;\n    padding: 20px;\n    ${space};\n    ${typography};\n    ${ssColor};\n  `};\n`\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(\n  ({ onTextChange, defaultValue, ...props }, ref) => {\n    return (\n      <Flex alignItems='center' position='relative'>\n        <StyledInput\n          {...props}\n          ref={ref}\n          defaultValue={defaultValue}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            return onTextChange && onTextChange(e.target.value)\n          }}\n        />\n      </Flex>\n    )\n  }\n)\nexport default Input\n","export enum TaskPriority {\n  HIGH,\n  MEDIUM,\n  LOW,\n}\n\nexport interface Task {\n  id: string\n  title: string\n  priority?: TaskPriority\n}\n\nexport interface TaskStage {\n  id: string\n  title: string\n  taskIds: string[]\n}\n\ninterface Store {\n  tasks: Map<string, Task>\n  stages: TaskStage[]\n}\n\nexport const initialState: Store = {\n  tasks: new Map([\n    [\n      '1',\n      {\n        id: '1',\n        title: 'Test 1',\n        priority: TaskPriority.HIGH,\n      },\n    ],\n    [\n      '2',\n      {\n        id: '2',\n        title: 'Test 2',\n        priority: TaskPriority.HIGH,\n      },\n    ],\n    [\n      '3',\n      {\n        id: '3',\n        title: 'Test 3',\n        priority: TaskPriority.HIGH,\n      },\n    ],\n  ]),\n  stages: [\n    {\n      id: 'lane-1',\n      title: 'Todo',\n      taskIds: ['1'],\n    },\n    {\n      id: 'lane-2',\n      title: 'Doing',\n      taskIds: ['2'],\n    },\n    {\n      id: 'lane-3',\n      title: 'Finished',\n      taskIds: ['3'],\n    },\n  ],\n}\n","import React from 'react'\nimport { TaskPriority } from 'src/interfaces/task'\nimport { theme } from 'src/lib/theme'\nimport styled, { css } from 'styled-components'\nimport Box, { BoxProps } from '../Box'\n\ninterface Props {\n  priority?: TaskPriority\n}\n\nexport type TaskPriorityMarkerProps = Props & BoxProps\n\nconst handleColorType = (priority?: TaskPriority): string => {\n  switch (priority) {\n    case TaskPriority.HIGH:\n      return theme.colors.danger\n    case TaskPriority.MEDIUM:\n      return theme.colors.warning\n    default:\n      return theme.colors.success[0]\n  }\n}\n\nconst Marker = styled(Box)<TaskPriorityMarkerProps>`\n  ${({ priority }) => css`\n    background-color: ${handleColorType(priority)};\n  `}\n\n  height: 8px;\n  border-radius: 4px;\n  width: 40px;\n`\n\nconst TaskPriorityMarker = ({\n  priority,\n  ...props\n}: TaskPriorityMarkerProps) => {\n  return <Marker priority={priority} {...props} />\n}\n\nexport default TaskPriorityMarker\n","import React, { forwardRef, useEffect, useState } from 'react'\nimport Text from 'src/components/Text'\nimport { Task } from 'src/interfaces/task'\nimport { theme } from 'src/lib/theme'\nimport styled from 'styled-components'\nimport { useDispatch } from 'react-redux'\nimport { editTask, isEditingTask } from 'src/state/ducks/taskboard/actions'\nimport Box from '../Box'\nimport Button from '../Button'\nimport Card, { CardProps } from '../Card'\nimport Input from '../Input'\nimport TaskPriorityMarker from '../TaskPriorityMarker'\n\nconst CustomCard = styled(Card)<CardProps>`\n  position: relative;\n  .edit {\n    display: none;\n  }\n\n  :hover {\n    .edit {\n      display: block;\n    }\n  }\n`\ninterface Props {\n  task?: Task\n  showPriority?: boolean\n  onSave?: (task: Task) => void\n  onCancel?: () => void\n}\n\nconst EditButton = styled(Button)`\n  position: absolute;\n  top: -4px;\n  right: 0;\n`\n\nconst Actions = styled(Box)`\n  position: absolute;\n  bottom: -50px;\n  left: 0;\n`\n\nconst ActionButton = styled(Button)`\n  background-color: ${theme.colors.success[0]};\n  color: ${theme.colors.white};\n  border-radius: 3px;\n  padding: 10px 32px;\n`\n\nexport type TaskCardProps = Props & CardProps\n\nconst TaskCard = forwardRef<HTMLDivElement, TaskCardProps>(\n  ({ task, showPriority = false, onSave, onCancel, ...props }, ref) => {\n    const dispatch = useDispatch()\n\n    const dispatchEdit = (editedTask: Task) => {\n      dispatch(editTask(editedTask))\n    }\n    const [editMode, setEditMode] = useState(!task)\n    const [title, setTitle] = useState(task?.title)\n\n    useEffect(() => {\n      dispatch(isEditingTask(editMode))\n    }, [editMode])\n\n    const closeActions = () => {\n      setEditMode(false)\n    }\n    return (\n      <CustomCard {...props} zIndex={editMode ? 10 : 0} ref={ref}>\n        {showPriority && (\n          <TaskPriorityMarker priority={task?.priority} marginBottom='6px' />\n        )}\n        {editMode ? (\n          <Input\n            as='textarea'\n            defaultValue={task?.title}\n            height='400px'\n            padding='20px'\n            marginTop='8px'\n            onTextChange={(newTitle) => {\n              setTitle(newTitle)\n            }}\n          />\n        ) : (\n          <Box position='relative'>\n            <Text\n              paddingRight='30px'\n              position='relative'\n              dangerouslySetInnerHTML={{\n                __html: task?.title.replace(/\\r\\n|\\r|\\n/g, '<br />') || '',\n              }}\n            />\n            <EditButton\n              className='edit'\n              color={theme.colors.greyscale[4]}\n              icon='pen'\n              onClick={() => {\n                setEditMode(true)\n              }}\n            />\n          </Box>\n        )}\n        {editMode && (\n          <Actions>\n            <ActionButton\n              onClick={() => {\n                closeActions()\n                const editedTask = { ...(task as Task), title: title || '' }\n                dispatchEdit(editedTask)\n                return onSave && onSave(editedTask)\n              }}\n            >\n              Save\n            </ActionButton>\n\n            <ActionButton\n              marginLeft='20px'\n              onClick={() => {\n                closeActions()\n                return onCancel && onCancel()\n              }}\n            >\n              Cancel\n            </ActionButton>\n          </Actions>\n        )}\n      </CustomCard>\n    )\n  }\n)\n\nexport default TaskCard\n","import React from 'react'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { Task } from 'src/interfaces/task'\nimport { CardProps } from '../Card'\nimport TaskCard from '../TaskCard'\n\ninterface Props {\n  task: Task\n  showPriority?: boolean\n  index: number\n}\n\nexport type DraggableTaskCardProps = Props & CardProps\n\nconst DraggableTaskCard = ({\n  index,\n  task,\n  showPriority,\n  ...props\n}: DraggableTaskCardProps) => {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided) => (\n        <TaskCard\n          ref={provided.innerRef}\n          task={task}\n          showPriority={showPriority}\n          {...props}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        />\n      )}\n    </Draggable>\n  )\n}\n\nexport default DraggableTaskCard\n","import React, { useEffect, useState } from 'react'\nimport { Droppable } from 'react-beautiful-dnd'\nimport { useDispatch } from 'react-redux'\nimport { Task, TaskStage } from 'src/interfaces/task'\nimport { theme } from 'src/lib/theme'\nimport { isEditingTask } from 'src/state/ducks/taskboard/actions'\nimport styled from 'styled-components'\nimport Box from '../Box'\nimport Button from '../Button'\nimport DraggableTaskCard from '../DraggableTaskCard'\nimport Flex, { FlexProps } from '../Flex'\nimport Heading from '../Heading'\nimport Input from '../Input'\nimport TaskCard from '../TaskCard'\n\nconst EditTitleButton = styled(Button)`\n  position: absolute;\n  right: 0;\n  top: 0;\n`\nconst EditTitleContainer = styled(Box)`\n  position: relative;\n\n  .edit {\n    display: none;\n  }\n  :hover {\n    .edit {\n      display: block;\n    }\n  }\n`\n\ninterface Props {\n  stage: TaskStage\n  tasks?: Task[]\n  onSave?: (stage: TaskStage) => void\n  showPriority?: boolean\n  onNewTaskAdded?: (stageId: string, task: Task) => void\n}\nconst TaskList = styled.div``\nexport type TaskLaneProps = FlexProps & Props\n\nexport default function TaskLane({\n  stage,\n  tasks,\n  showPriority,\n  onNewTaskAdded,\n  onSave,\n  ...props\n}: TaskLaneProps) {\n  const [addingNewTask, setAddingNewTask] = useState(false)\n  const [editMode, setEditMode] = useState(false)\n  const [title, setTitle] = useState(stage.title)\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(isEditingTask(addingNewTask))\n  }, [addingNewTask])\n\n  const onAddClicked = () => {\n    setAddingNewTask(true)\n  }\n  return (\n    <Flex\n      backgroundColor={theme.colors.greyscale[7]}\n      padding='10px'\n      flexDirection='column'\n      borderRadius='4px'\n      flex={1}\n      height='fit-content'\n      {...props}\n    >\n      {editMode ? (\n        <Box position='relative'>\n          <Input\n            defaultValue={stage.title}\n            height='20px'\n            padding='0 20px'\n            onTextChange={(newTitle) => {\n              setTitle(newTitle)\n            }}\n          />\n          <Flex\n            position='absolute'\n            right='0'\n            top='0'\n            height='100%'\n            alignItems='center'\n            justifyContent='center'\n          >\n            <Button\n              icon='times'\n              color={theme.colors.danger}\n              iconSize='2x'\n              onClick={() => {\n                setEditMode(false)\n              }}\n            />\n            <Button\n              icon='check-circle'\n              color={theme.colors.success[0]}\n              iconSize='2x'\n              onClick={() => {\n                setEditMode(false)\n                const editedStage = { ...stage, title: title || '' }\n                return onSave && onSave(editedStage)\n              }}\n            />\n          </Flex>\n        </Box>\n      ) : (\n        <EditTitleContainer>\n          <Heading as='h5' fontWeight={600}>\n            {stage.title}\n          </Heading>\n          <EditTitleButton\n            className='edit'\n            color={theme.colors.greyscale[4]}\n            icon='pen'\n            onClick={() => {\n              setEditMode(true)\n            }}\n          />\n        </EditTitleContainer>\n      )}\n      <Droppable droppableId={stage.id}>\n        {(provided) => {\n          return (\n            <TaskList ref={provided.innerRef} {...provided.droppableProps}>\n              {tasks?.map((task, index) => (\n                <DraggableTaskCard\n                  key={`task_${task.id}`}\n                  task={task}\n                  showPriority={showPriority}\n                  index={index}\n                  marginTop='12px'\n                />\n              ))}\n              {provided.placeholder}\n              {(!tasks || !tasks.length) && (\n                <Heading as='h5' paddingY='16px'>\n                  No tasks\n                </Heading>\n              )}\n            </TaskList>\n          )\n        }}\n      </Droppable>\n      <Button\n        padding='0'\n        marginTop='16px'\n        marginLeft='8px'\n        textAlign='left'\n        icon='plus'\n        color='grey'\n        onClick={onAddClicked}\n      >\n        Add another Card\n      </Button>\n      {addingNewTask && (\n        <TaskCard\n          marginTop='-14px'\n          onSave={(task) => {\n            setAddingNewTask(false)\n            return onNewTaskAdded && onNewTaskAdded(stage.id, task)\n          }}\n          onCancel={() => {\n            setAddingNewTask(false)\n          }}\n        />\n      )}\n    </Flex>\n  )\n}\n","import Box from 'src/components/Box'\nimport styled from 'styled-components'\n\nconst PageContainer = styled(Box)`\n  padding: 16px;\n  height: 100vh;\n  width: 100vw;\n`\n\nexport default PageContainer\n","import React from 'react'\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd'\nimport { useSelector, useDispatch } from 'react-redux'\nimport DarkOverlay from 'src/components/DarkOverlay'\nimport Flex from 'src/components/Flex'\nimport Heading from 'src/components/Heading'\nimport TaskLane from 'src/components/TaskLane'\nimport { Task, TaskStage } from 'src/interfaces/task'\nimport { theme } from 'src/lib/theme'\nimport { ApplicationState } from 'src/state/ducks'\nimport { moveTask, addTask, editStage } from 'src/state/ducks/taskboard/actions'\nimport PageContainer from '../PageContainer'\n\nconst TaskBoard = () => {\n  const dispatch = useDispatch()\n\n  const state = useSelector(({ taskboard }: ApplicationState) => ({\n    stages: taskboard.stages,\n    tasks: taskboard.tasks,\n    isEditing: taskboard.isEditing,\n  }))\n\n  const onDragEnd = (result: DropResult) => {\n    if (!result.destination) {\n      return\n    }\n    dispatch(\n      moveTask({\n        stageSourceId: result.source.droppableId,\n        stageDestId: result.destination.droppableId,\n        sourceIndex: result.source.index,\n        destIndex: result.destination.index,\n        taskId: result.draggableId,\n      })\n    )\n  }\n\n  const onNewTaskAdded = (stageId: string, task: Task) => {\n    dispatch(addTask(stageId, task))\n  }\n\n  const onEditStage = (stage: TaskStage) => {\n    dispatch(editStage(stage))\n  }\n\n  return (\n    <PageContainer backgroundColor={theme.colors.greyscale[4]}>\n      {state.isEditing && <DarkOverlay />}\n      <Heading as='h2' color={theme.colors.white}>\n        TASK MANAGEMENT BOARD\n      </Heading>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Flex marginTop='12px'>\n          {state.stages.map((stage, index) => {\n            const stageTasks = stage.taskIds.map(\n              (id) => state.tasks.find((task) => task.id === id) as Task\n            )\n            return (\n              <TaskLane\n                key={stage.id}\n                stage={stage}\n                tasks={stageTasks}\n                marginRight='16px'\n                showPriority={index === 0}\n                onNewTaskAdded={onNewTaskAdded}\n                onSave={onEditStage}\n              />\n            )\n          })}\n        </Flex>\n      </DragDropContext>\n    </PageContainer>\n  )\n}\n\nexport default TaskBoard\n","import { TaskPriority } from 'src/interfaces/task'\nimport { TaskBoardState } from './types'\n\nexport const defaultState: TaskBoardState = {\n  isEditing: false,\n  tasks: [\n    {\n      id: '1',\n      title: 'This is a Todo list whith items that can be marked off',\n      priority: TaskPriority.LOW,\n    },\n    {\n      id: '2',\n      title: 'You can categorize each item with a Color (Red, Yellow, Green)',\n      priority: TaskPriority.MEDIUM,\n    },\n    {\n      id: '3',\n      title: 'Hover an item to Edit the text',\n      priority: TaskPriority.HIGH,\n    },\n    {\n      id: '4',\n      title: 'You can click and drag items up and down the list',\n      priority: TaskPriority.HIGH,\n    },\n    {\n      id: '5',\n      title: 'As well as drag items from one column to the other',\n      priority: TaskPriority.HIGH,\n    },\n    {\n      id: '6',\n      title: 'As well as rename the Columns',\n      priority: TaskPriority.HIGH,\n    },\n  ],\n  stages: [\n    {\n      id: 'lane-1',\n      title: 'Column 1',\n      taskIds: ['1', '2', '3'],\n    },\n    {\n      id: 'lane-2',\n      title: 'Column 2',\n      taskIds: ['4', '5'],\n    },\n    {\n      id: 'lane-3',\n      title: 'Column 3',\n      taskIds: ['6'],\n    },\n  ],\n}\n","import { defineState } from 'redux-localstore'\nimport { Task, TaskStage } from 'src/interfaces/task'\nimport { Action, PayloadAction, TypeConstant } from 'typesafe-actions'\nimport { v4 as uuidv4 } from 'uuid'\nimport { defaultState } from './defaultState'\nimport { TaskBoardActionTypes, TaskBoardState } from './types'\n\nconst initialState = defineState(defaultState)('taskboard')\ninitialState.isEditing = false\ninterface AddPayLoad {\n  task: Task\n  stageID: string\n}\n\ninterface EditPayLoad {\n  task: Task\n  stage: TaskStage\n}\n\nexport interface MovePayload {\n  stageSourceId: string\n  stageDestId: string\n  sourceIndex: number\n  destIndex: number\n  taskId: string\n}\n\ninterface Payload {\n  edit: EditPayLoad\n  add: AddPayLoad\n  move: MovePayload\n  isEditing: boolean\n}\n\nexport const taskboardReducer = (\n  state: TaskBoardState = initialState,\n  action: Action<TypeConstant> & PayloadAction<TypeConstant, Payload>\n): TaskBoardState => {\n  switch (action.type) {\n    case TaskBoardActionTypes.ADD_TASK: {\n      const id = uuidv4()\n      const newTask = { ...action.payload.add.task, id } as Task\n      const { stages } = state\n      const index = stages.findIndex((s) => s.id === action.payload.add.stageID)\n      if (index >= 0) {\n        stages[index].taskIds.push(id)\n      }\n      return {\n        ...state,\n        tasks: [...state.tasks, newTask],\n        stages,\n      }\n    }\n    case TaskBoardActionTypes.IS_EDITING: {\n      return {\n        ...state,\n        isEditing: action.payload.isEditing,\n      }\n    }\n    case TaskBoardActionTypes.EDIT_TASK: {\n      const { tasks } = state\n      const index = tasks.findIndex((t) => t.id === action.payload.edit.task.id)\n      if (index >= 0) {\n        tasks[index] = action.payload.edit.task\n      }\n      return {\n        ...state,\n        tasks,\n      }\n    }\n    case TaskBoardActionTypes.MOVE_TASK: {\n      const { stages } = state\n      const { move } = action.payload\n      if (\n        move.stageSourceId === move.stageDestId &&\n        move.sourceIndex === move.destIndex\n      ) {\n        return state\n      }\n\n      const sourceStageIndex = stages.findIndex(\n        (s) => s.id === move.stageSourceId\n      )\n      const destStageIndex =\n        move.stageDestId === move.stageSourceId\n          ? sourceStageIndex\n          : stages.findIndex((s) => s.id === move.stageDestId)\n\n      stages[sourceStageIndex].taskIds.splice(move.sourceIndex, 1)\n      stages[destStageIndex].taskIds.splice(\n        move.destIndex,\n        0,\n        action.payload.move.taskId\n      )\n\n      return {\n        ...state,\n        stages,\n      }\n    }\n    case TaskBoardActionTypes.EDIT_STAGE: {\n      const { stages } = state\n      const index = stages.findIndex(\n        (t) => t.id === action.payload.edit.stage.id\n      )\n      if (index >= 0) {\n        stages[index] = action.payload.edit.stage\n      }\n      return {\n        ...state,\n        stages,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TaskBoardState } from './taskboard/types'\nimport { taskboardReducer } from './taskboard/reducers'\n\nexport interface ApplicationState {\n  taskboard: TaskBoardState\n}\nexport const rootReducer = combineReducers<ApplicationState>({\n  taskboard: taskboardReducer,\n})\n","import configureStore from './configureStore.dev';\n\nexport default configureStore;\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport './App.css'\nimport { GlobalThemeProvider } from './lib/theme'\nimport TaskBoard from './pages/TaskBoard'\nimport configureStore from './state'\n\nconst initialState = (window as any).initialReduxState\nconst store = configureStore(initialState)\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <GlobalThemeProvider>\n        <TaskBoard />\n      </GlobalThemeProvider>\n    </Provider>\n  )\n}\n\nexport default App\n","import { compose, createStore, Store } from 'redux'\nimport storeSynchronize from 'redux-localstore'\nimport { ApplicationState, rootReducer } from './ducks'\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\n  }\n}\n\nexport default function configureStore(\n  initialState: ApplicationState\n): Store<ApplicationState> {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  // Create Store\n  const store = createStore(rootReducer, initialState, composeEnhancers())\n  storeSynchronize(store, {\n    \n  })\n  return store\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n// Init all \"fas\" icons for react-fontawesome\nlibrary.add(fas)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}